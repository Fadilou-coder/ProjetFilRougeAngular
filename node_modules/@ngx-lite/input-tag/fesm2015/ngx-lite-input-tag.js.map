{"version":3,"file":"ngx-lite-input-tag.js","sources":["../../../projects/ngx-input-tag/src/ngx-input-tag.di-tokens.ts","../../../projects/ngx-input-tag/src/ngx-input-tag.component.html","../../../projects/ngx-input-tag/src/ngx-input-tag.component.ts","../../../projects/ngx-input-tag/src/ngx-input-tag.module.ts","../../../projects/ngx-input-tag/src/public_api.ts","../../../projects/ngx-input-tag/src/ngx-lite-input-tag.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport type TagFormatter = (tag: string) => string;\n\nexport const NGX_INPUT_TAG_TAG_FORMATTER = new InjectionToken<TagFormatter>(\n  'NGX_INPUT_TAG_TAG_FORMATTER'\n);\n","<div (click)=\"focus()\" class=\"ngx-input-tag\">\n  <div *ngFor=\"let tag of value\" class=\"ngx-input-tag__tag\">\n    {{tag}}\n    <button type=\"button\" (click)=\"removeTag(tag, $event)\">\n      &#10006;\n    </button>\n  </div>\n  <input type=\"text\" #inputElement aria-label=\"Tags\" [style.width]=\"inputElement.value.length * 10 + 10 + 'px'\" (keyup)=\"addTagEvent($event)\" (keydown)=\"preventDefaultTabBehavior($event)\"\n    class=\"ngx-input-tag__input\" />\n  <button type=\"button\" aria-label=\"Add Tag\" title=\"Add Tag\" (click)=\"addTagClick($event, inputElement.value)\" class=\"ngx-input-tag__btn\">\n    +\n  </button>\n</div>\n\n<div *ngIf=\"inputElement.value.length && tagSuggestions && tagSuggestions.length\" class=\"ngx-input-tag-suggestions\">\n  <button type=\"button\" (click)=\"addSuggestedTag(tag)\" *ngFor=\"let tag of tagSuggestions\" class=\"ngx-input-tag-suggestions__tag\">{{tag}}</button>\n</div>","import {\n  forwardRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild,\n  Inject,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  NGX_INPUT_TAG_TAG_FORMATTER,\n  TagFormatter,\n} from './ngx-input-tag.di-tokens';\n\nexport enum KeyCodes {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Comma = 188,\n}\n\n@Component({\n  selector: 'ngx-input-tag',\n  templateUrl: './ngx-input-tag.component.html',\n  styleUrls: ['./ngx-input-tag.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxInputTagComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NgxInputTagComponent),\n      multi: true,\n    },\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxInputTagComponent implements ControlValueAccessor {\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouched();\n  }\n\n  @ViewChild('inputElement', { static: false }) inputElement?: ElementRef;\n  @Input() tagSuggestions: string[] = [];\n  @Input() maxTagLength = 25;\n  @Input() maxNumberOfTags = 1000;\n  @Output() readonly textChange = new EventEmitter<string>();\n\n  private _value: string[] = [];\n  private prevTagInput = '';\n  private currentNumberOfTags = 0;\n  private tagError: { message: string } | null = null;\n\n  constructor(\n    @Inject(NGX_INPUT_TAG_TAG_FORMATTER) private tagFormatter: TagFormatter\n  ) {}\n\n  onChange = (_value: string[]) => {};\n\n  onTouched = () => {};\n\n  registerOnChange(fn: (value: string[]) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: string[]) {\n    if (value) {\n      this.value = value.map((v) => this.tagFormatter(v));\n      this.setCurrentNumberOfTags();\n    }\n  }\n\n  validate() {\n    return this.tagError;\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleClick(event: MouseEvent) {\n    if (\n      this.inputElement &&\n      !this.inputElement.nativeElement.contains(event.target) &&\n      this.inputElement.nativeElement.value\n    ) {\n      this.addTag(this.inputElement.nativeElement.value);\n    }\n  }\n\n  addTag(tag: string) {\n    const formattedTag = this.tagFormatter(tag);\n    const tagIsEmpty = formattedTag.length === 0;\n    const invalidTagLength =\n      !formattedTag.length ||\n      (this.maxTagLength && formattedTag.length > this.maxTagLength);\n    const duplicateTag = this.value.indexOf(formattedTag) > -1;\n    const exceedsMaxNumberOfTags =\n      this.currentNumberOfTags > this.maxNumberOfTags;\n\n    if (!tagIsEmpty && invalidTagLength) {\n      this.tagError = {\n        message: `Tag length cannot exceed ${this.maxTagLength} characters`,\n      };\n    }\n\n    if (duplicateTag) {\n      this.tagError = { message: 'Cannot add duplicate tag' };\n    }\n\n    if (exceedsMaxNumberOfTags) {\n      const plural = this.maxNumberOfTags === 1 ? '' : 's';\n      this.tagError = {\n        message: `Cannot exceed ${this.maxNumberOfTags} tag${plural}`,\n      };\n    }\n\n    if (\n      !tagIsEmpty &&\n      !invalidTagLength &&\n      !duplicateTag &&\n      !exceedsMaxNumberOfTags &&\n      this.inputElement\n    ) {\n      this.tagError = null;\n      this.value.push(formattedTag);\n      this.setCurrentNumberOfTags();\n      this.inputElement.nativeElement.value = '';\n    }\n\n    this.value = this.value;\n    this.focus();\n  }\n\n  addTagEvent(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n\n    this.tagError = null;\n    this.value = this.value;\n\n    this.textChange.emit(input.value);\n    if (\n      event.keyCode === KeyCodes.Backspace &&\n      this.prevTagInput.length === 0\n    ) {\n      this._value.pop();\n      this.setCurrentNumberOfTags();\n    } else if (\n      event.keyCode === KeyCodes.Enter ||\n      event.keyCode === KeyCodes.Comma ||\n      event.keyCode === KeyCodes.Tab\n    ) {\n      this.addTag(input.value);\n    }\n\n    this.prevTagInput = input.value;\n  }\n\n  preventDefaultTabBehavior(event: KeyboardEvent) {\n    if (event.keyCode === KeyCodes.Tab && this.prevTagInput.length > 0) {\n      event.preventDefault();\n    }\n  }\n\n  addTagClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    if (value.length > 0) {\n      this.addTag(value);\n    }\n  }\n\n  addSuggestedTag(tag: string) {\n    this.addTag(tag);\n  }\n\n  removeTag(tag: string, event: any) {\n    if (event.keyCode !== KeyCodes.Enter) {\n      this.value = this._value.filter((t) => t !== tag);\n      this.setCurrentNumberOfTags();\n    }\n  }\n\n  focus() {\n    this.inputElement?.nativeElement.focus();\n  }\n\n  setCurrentNumberOfTags() {\n    this.currentNumberOfTags = this.value.length\n      ? this.value.toString().split(',').length\n      : 0;\n  }\n}\n\nexport function formatter(tag: string): string {\n  return tag\n    .trim()\n    .replace(/(\\s|-)+/g, '-')\n    .replace(/\\,/g, '')\n    .toLowerCase();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  NgxInputTagComponent,\n  formatter as tagFormatter,\n} from './ngx-input-tag.component';\nimport { NGX_INPUT_TAG_TAG_FORMATTER } from './ngx-input-tag.di-tokens';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxInputTagComponent],\n  exports: [NgxInputTagComponent],\n})\nexport class NgxInputTagModule {\n  static forRoot(config = { tagFormatter }) {\n    return {\n      ngModule: NgxInputTagModule,\n      providers: [\n        {\n          provide: NGX_INPUT_TAG_TAG_FORMATTER,\n          useValue: config.tagFormatter,\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-input-tag\n */\n\nexport * from './ngx-input-tag.component';\nexport * from './ngx-input-tag.di-tokens';\nexport * from './ngx-input-tag.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵstyleProp","tagFormatter"],"mappings":"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"}