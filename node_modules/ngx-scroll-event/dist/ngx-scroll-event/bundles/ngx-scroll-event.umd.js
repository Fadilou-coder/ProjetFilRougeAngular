(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-scroll-event', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-scroll-event'] = {}, global.ng.core));
}(this, (function (exports, core) { 'use strict';

    var NgxScrollEventDirective = /** @class */ (function () {
        function NgxScrollEventDirective() {
            this.onscroll = new core.EventEmitter();
            this.bottomOffset = 100;
            this.topOffset = 100;
        }
        // handle host scroll
        NgxScrollEventDirective.prototype.scrolled = function ($event) {
            this.elementScrollEvent($event);
        };
        // handle window scroll
        NgxScrollEventDirective.prototype.windowScrolled = function ($event) {
            this.windowScrollEvent($event);
        };
        NgxScrollEventDirective.prototype.windowScrollEvent = function ($event) {
            var target = $event.target;
            var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
            var isReachingTop = scrollTop < this.topOffset;
            var isReachingBottom = (target.body.offsetHeight - (window.innerHeight + scrollTop)) < this.bottomOffset;
            var emitValue = { isReachingBottom: isReachingBottom, isReachingTop: isReachingTop, originalEvent: $event, isWindowEvent: true };
            this.onscroll.emit(emitValue);
        };
        NgxScrollEventDirective.prototype.elementScrollEvent = function ($event) {
            var target = $event.target;
            var scrollPosition = target.scrollHeight - target.scrollTop;
            var offsetHeight = target.offsetHeight;
            var isReachingTop = target.scrollTop < this.topOffset;
            var isReachingBottom = (scrollPosition - offsetHeight) < this.bottomOffset;
            var emitValue = { isReachingBottom: isReachingBottom, isReachingTop: isReachingTop, originalEvent: $event, isWindowEvent: false };
            this.onscroll.emit(emitValue);
        };
        return NgxScrollEventDirective;
    }());
    NgxScrollEventDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[libScrollEvent]'
                },] }
    ];
    NgxScrollEventDirective.ctorParameters = function () { return []; };
    NgxScrollEventDirective.propDecorators = {
        onscroll: [{ type: core.Output }],
        bottomOffset: [{ type: core.Input }],
        topOffset: [{ type: core.Input }],
        scrolled: [{ type: core.HostListener, args: ['scroll', ['$event'],] }],
        windowScrolled: [{ type: core.HostListener, args: ['window:scroll', ['$event'],] }]
    };

    var NgxScrollEventModule = /** @class */ (function () {
        function NgxScrollEventModule() {
        }
        return NgxScrollEventModule;
    }());
    NgxScrollEventModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [NgxScrollEventDirective],
                    imports: [],
                    exports: [NgxScrollEventDirective]
                },] }
    ];

    /*
     * Public API Surface of ngx-scroll-event
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxScrollEventDirective = NgxScrollEventDirective;
    exports.NgxScrollEventModule = NgxScrollEventModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-scroll-event.umd.js.map
