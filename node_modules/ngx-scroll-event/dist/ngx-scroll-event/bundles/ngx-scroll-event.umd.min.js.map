{"version":3,"sources":["../../../projects/ngx-scroll-event/src/lib/ngx-scroll-event.directive.ts","../../../projects/ngx-scroll-event/src/lib/ngx-scroll-event.module.ts"],"names":["NgxScrollEventDirective","this","onscroll","EventEmitter","bottomOffset","topOffset","prototype","scrolled","$event","elementScrollEvent","windowScrolled","windowScrollEvent","target","scrollTop","window","pageYOffset","document","documentElement","body","isReachingTop","emitValue","isReachingBottom","offsetHeight","innerHeight","originalEvent","isWindowEvent","emit","scrollPosition","scrollHeight","Directive","args","selector","Output","Input","HostListener","NgModule","declarations","imports","exports"],"mappings":"oVAmBE,SAAAA,IAJiBC,KAAAC,SAAW,IAAIC,EAAAA,aAChBF,KAAAG,aAAe,IACfH,KAAAI,UAAY,WAKeL,EAAAM,UAAAC,SAAA,SAASC,GAClDP,KAAKQ,mBAAmBD,IAIwBR,EAAAM,UAAAI,eAAA,SAAeF,GAC/DP,KAAKU,kBAAkBH,IAGfR,EAAAM,UAAAK,kBAAA,SAAkBH,GAC1B,IAAMI,EAASJ,EAAOI,OAChBC,EAAYC,OAAOC,aAAeC,SAASC,gBAAgBJ,WAAaG,SAASE,KAAKL,WAAa,EACnGM,EAAgBN,EAAYZ,KAAKI,UAEjCe,EAA4B,CAACC,iBADRT,EAAOM,KAAKI,cAAgBR,OAAOS,YAAcV,GAAeZ,KAAKG,aAC3Ce,cAAaA,EAAEK,cAAehB,EAAQiB,eAAe,GAC1GxB,KAAKC,SAASwB,KAAKN,IAGXpB,EAAAM,UAAAG,mBAAA,SAAmBD,GAC3B,IAAMI,EAASJ,EAAOI,OAChBe,EAAiBf,EAAOgB,aAAehB,EAAOC,UAC9CS,EAAeV,EAAOU,aACtBH,EAAgBP,EAAOC,UAAYZ,KAAKI,UAExCe,EAA4B,CAACC,iBADTM,EAAiBL,EAAgBrB,KAAKG,aACXe,cAAaA,EAAEK,cAAehB,EAAQiB,eAAe,GAC1GxB,KAAKC,SAASwB,KAAKN,6BApCtBS,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,+FAGTC,EAAAA,6BACAC,EAAAA,yBACAA,EAAAA,wBAKAC,EAAAA,aAAYJ,KAAA,CAAC,SAAU,CAAC,mCAKxBI,EAAAA,aAAYJ,KAAA,CAAC,gBAAiB,CAAC,oBClBlC,iCANCK,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAACpC,GACfqC,QAAS,GAETC,QAAS,CAACtC","sourcesContent":["import { Directive, HostListener, Output, EventEmitter, Input } from '@angular/core';\n\nexport type NgxScrollEvent = {\n  isReachingBottom: boolean,\n  isReachingTop: boolean,\n  originalEvent: Event,\n  isWindowEvent: boolean\n};\n\ndeclare const window: Window;\n\n@Directive({\n  selector: '[libScrollEvent]'\n})\nexport class NgxScrollEventDirective {\n  @Output() public onscroll = new EventEmitter<NgxScrollEvent>();\n  @Input() public bottomOffset = 100;\n  @Input() public topOffset = 100;\n\n  constructor() { }\n\n  // handle host scroll\n  @HostListener('scroll', ['$event']) public scrolled($event: Event): void {\n    this.elementScrollEvent($event);\n  }\n\n  // handle window scroll\n  @HostListener('window:scroll', ['$event']) public windowScrolled($event: Event): void {\n    this.windowScrollEvent($event);\n  }\n\n  protected windowScrollEvent($event: Event): void {\n    const target = $event.target as Document;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n    const isReachingTop = scrollTop < this.topOffset;\n    const isReachingBottom = ( target.body.offsetHeight - (window.innerHeight + scrollTop) ) < this.bottomOffset;\n    const emitValue: NgxScrollEvent = {isReachingBottom, isReachingTop, originalEvent: $event, isWindowEvent: true};\n    this.onscroll.emit(emitValue);\n  }\n\n  protected elementScrollEvent($event: Event): void {\n    const target = $event.target as HTMLElement;\n    const scrollPosition = target.scrollHeight - target.scrollTop;\n    const offsetHeight = target.offsetHeight;\n    const isReachingTop = target.scrollTop < this.topOffset;\n    const isReachingBottom = (scrollPosition - offsetHeight) < this.bottomOffset;\n    const emitValue: NgxScrollEvent = {isReachingBottom, isReachingTop, originalEvent: $event, isWindowEvent: false};\n    this.onscroll.emit(emitValue);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxScrollEventDirective } from './ngx-scroll-event.directive';\n\n@NgModule({\n  declarations: [NgxScrollEventDirective],\n  imports: [\n  ],\n  exports: [NgxScrollEventDirective]\n})\nexport class NgxScrollEventModule { }\n"]}