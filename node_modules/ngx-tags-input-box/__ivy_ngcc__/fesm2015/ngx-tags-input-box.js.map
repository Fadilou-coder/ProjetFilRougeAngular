{"version":3,"file":"ngx-tags-input-box.js","sources":["ngx-tags-input-box/lib/ngx-tags.service.ts","ngx-tags-input-box/lib/ngx-tags.component.ts","ngx-tags-input-box/lib/tags/tags.component.ts","ngx-tags-input-box/lib/ngx-tags.module.ts","ngx-tags-input-box/public-api.ts","ngx-tags-input-box/ngx-tags-input-box.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTagsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tags',\n  template: `\n    <p>\n      ngx-tags works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxTagsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tags-input',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss'],\n})\nexport class TagsComponent implements OnInit {\n  constructor() {}\n  @Output() tagsChange = new EventEmitter();\n  @Input() limit: number;\n  @Input() mode: string;\n  @Input() placeholder: string;\n  @Input() header: string;\n\n  tags = [];\n\n  ngOnInit(): void {\n    this.limit = this.limit || 5;\n    this.placeholder = this.placeholder || 'Add tags';\n    this.header = this.header || 'Tags';\n\n    if (this.mode === 'success') {\n      this.mode = 'green';\n    } else if (this.mode === 'primary') {\n      this.mode = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.mode = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.mode = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.mode = 'cornflowerblue';\n    } else {\n      this.mode = 'cornflowerblue';\n    }\n  }\n  add(e) {\n    if (this.tags.length < this.limit - 1) {\n      this.tags.push(e.target.value);\n    } else {\n      this.tags[this.limit - 1] = e.target.value;\n    }\n    e.target.value = '';\n    this.tagsChange.emit(this.tags);\n  }\n\n  remove(i) {\n    this.tags.splice(i, 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTagsComponent } from './ngx-tags.component';\nimport { TagsComponent } from './tags/tags.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxTagsComponent, TagsComponent],\n  imports: [CommonModule],\n  exports: [NgxTagsComponent, TagsComponent],\n})\nexport class NgxTagsModule {}\n","/*\n * Public API Surface of ngx-tags\n */\n\nexport * from './lib/ngx-tags.service';\nexport * from './lib/ngx-tags.component';\nexport * from './lib/ngx-tags.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {TagsComponent as Éµa} from './lib/tags/tags.component';"]}