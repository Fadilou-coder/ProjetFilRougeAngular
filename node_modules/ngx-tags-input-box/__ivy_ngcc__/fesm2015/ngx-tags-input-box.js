import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable, Component, EventEmitter, Output, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function TagsComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 5);
    ɵngcc0.ɵɵlistener("click", function TagsComponent_span_6_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const i_r2 = ctx.index; const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.remove(i_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r0.mode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r1, "\u00A0\u00D7 ");
} }
let NgxTagsService = class NgxTagsService {
    constructor() { }
};
NgxTagsService.ɵfac = function NgxTagsService_Factory(t) { return new (t || NgxTagsService)(); };
NgxTagsService.ɵprov = ɵɵdefineInjectable({ factory: function NgxTagsService_Factory() { return new NgxTagsService(); }, token: NgxTagsService, providedIn: "root" });

let NgxTagsComponent = class NgxTagsComponent {
    constructor() { }
    ngOnInit() {
    }
};
NgxTagsComponent.ɵfac = function NgxTagsComponent_Factory(t) { return new (t || NgxTagsComponent)(); };
NgxTagsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxTagsComponent, selectors: [["ngx-tags"]], decls: 2, vars: 0, template: function NgxTagsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, " ngx-tags works! ");
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });

let TagsComponent = class TagsComponent {
    constructor() {
        this.tagsChange = new EventEmitter();
        this.tags = [];
    }
    ngOnInit() {
        this.limit = this.limit || 5;
        this.placeholder = this.placeholder || 'Add tags';
        this.header = this.header || 'Tags';
        if (this.mode === 'success') {
            this.mode = 'green';
        }
        else if (this.mode === 'primary') {
            this.mode = '#0d47a1';
        }
        else if (this.mode === 'danger') {
            this.mode = 'crimson';
        }
        else if (this.mode === 'warning') {
            this.mode = '#ff9800';
        }
        else if (this.mode === 'info') {
            this.mode = 'cornflowerblue';
        }
        else {
            this.mode = 'cornflowerblue';
        }
    }
    add(e) {
        if (this.tags.length < this.limit - 1) {
            this.tags.push(e.target.value);
        }
        else {
            this.tags[this.limit - 1] = e.target.value;
        }
        e.target.value = '';
        this.tagsChange.emit(this.tags);
    }
    remove(i) {
        this.tags.splice(i, 1);
    }
};
TagsComponent.ɵfac = function TagsComponent_Factory(t) { return new (t || TagsComponent)(); };
TagsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TagsComponent, selectors: [["ngx-tags-input"]], inputs: { limit: "limit", placeholder: "placeholder", header: "header", mode: "mode" }, outputs: { tagsChange: "tagsChange" }, decls: 7, vars: 6, consts: [["for", "headerText"], ["type", "text", 1, "input-tags", 3, "placeholder", "change"], ["for", ""], [1, "righter"], ["class", "labeler", 3, "backgroundColor", "click", 4, "ngFor", "ngForOf"], [1, "labeler", 3, "click"]], template: function TagsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "input", 1);
        ɵngcc0.ɵɵlistener("change", function TagsComponent_Template_input_change_2_listener($event) { return ctx.add($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "label", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵtemplate(6, TagsComponent_span_6_Template, 2, 3, "span", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("border-color", ctx.mode);
        ɵngcc0.ɵɵproperty("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1("Maximum tags allowed ", ctx.limit, " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tags);
    } }, directives: [ɵngcc1.NgForOf], styles: [".input-tags[_ngcontent-%COMP%]{width:100%;background-color:#fff;padding:.625rem;margin:.3125rem 0;border:1px solid #000}.labeler[_ngcontent-%COMP%]{padding:7.5px;background-color:#6495ed;border-radius:5px;margin:.3125rem 0 .3125rem .3125rem;color:#fff;font-size:12px;text-transform:lowercase;cursor:pointer}.righter[_ngcontent-%COMP%]{text-align:right}input[_ngcontent-%COMP%]:focus{border:1px solid!important;outline:0;box-shadow:none}"] });
__decorate([
    Output()
], TagsComponent.prototype, "tagsChange", void 0);
__decorate([
    Input()
], TagsComponent.prototype, "limit", void 0);
__decorate([
    Input()
], TagsComponent.prototype, "mode", void 0);
__decorate([
    Input()
], TagsComponent.prototype, "placeholder", void 0);
__decorate([
    Input()
], TagsComponent.prototype, "header", void 0);

let NgxTagsModule = class NgxTagsModule {
};
NgxTagsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxTagsModule });
NgxTagsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxTagsModule_Factory(t) { return new (t || NgxTagsModule)(); }, imports: [[CommonModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxTagsService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxTagsComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-tags',
                template: `
    <p>
      ngx-tags works!
    </p>
  `
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TagsComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-tags-input',
                template: "<label for=\"headerText\">{{ header }}</label>\n<input\n  type=\"text\"\n  class=\"input-tags\"\n  (change)=\"add($event)\"\n  [style.borderColor]=\"mode\"\n  [placeholder]=\"placeholder\"\n/>\n<label for=\"\">Maximum tags allowed {{ limit }} </label>\n<div class=\"righter\">\n  <span\n    class=\"labeler\" (click)=\"remove(i)\"\n    [style.backgroundColor]=\"mode\"\n    *ngFor=\"let item of tags; index as i\"\n  >\n    {{ item }}&nbsp;&times;\n  </span>\n</div>\n",
                styles: [".input-tags{width:100%;background-color:#fff;padding:.625rem;margin:.3125rem 0;border:1px solid #000}.labeler{padding:7.5px;background-color:#6495ed;border-radius:5px;margin:.3125rem 0 .3125rem .3125rem;color:#fff;font-size:12px;text-transform:lowercase;cursor:pointer}.righter{text-align:right}input:focus{border:1px solid!important;outline:0;box-shadow:none}"]
            }]
    }], function () { return []; }, { tagsChange: [{
            type: Output
        }], limit: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], header: [{
            type: Input
        }], mode: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxTagsModule, { declarations: function () { return [NgxTagsComponent, TagsComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxTagsComponent, TagsComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxTagsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgxTagsComponent, TagsComponent],
                imports: [CommonModule],
                exports: [NgxTagsComponent, TagsComponent]
            }]
    }], null, null); })();

/*
 * Public API Surface of ngx-tags
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxTagsComponent, NgxTagsModule, NgxTagsService, TagsComponent as ɵa };

//# sourceMappingURL=ngx-tags-input-box.js.map